import React, { useContext, useState } from "react";
import { CartContext } from "../context/CartContext";
import CartItem from "./CartItem";
import { Card, ListGroup, Button, Alert, Modal } from "react-bootstrap";

const Cart = () => {
  const { cartItems, clearCart, totalValue } = useContext(CartContext);
  const [message, setMessage] = useState("");
  const [showConfirm, setShowConfirm] = useState(false); 
  const [isConfirmed, setIsConfirmed] = useState(false); 
  const [orderDetails, setOrderDetails] = useState(null);

  const handleConfirmOrder = () => {
    if (cartItems.length === 0) {
      setMessage("‚ùå Gi·ªè h√†ng tr·ªëng, kh√¥ng th·ªÉ x√°c nh·∫≠n ƒë∆°n h√†ng!");
      return;
    }
    setShowConfirm(true);
  };

  const handleConfirmYes = () => {
    setIsConfirmed(true);
    setShowConfirm(false);
    setMessage("‚úÖ ƒê∆°n h√†ng ƒë√£ ƒë∆∞·ª£c x√°c nh·∫≠n! Vui l√≤ng b·∫•m Thanh to√°n.");
  };

  const handleConfirmNo = () => {
    setShowConfirm(false);
  };

  // Thanh to√°n
  const handlePayment = () => {
    if (!isConfirmed) {
      setMessage("‚ö†Ô∏è Vui l√≤ng x√°c nh·∫≠n ƒë∆°n h√†ng tr∆∞·ªõc khi thanh to√°n!");
      return;
    }

    // L∆∞u th√¥ng tin ƒë∆°n h√†ng
    const newOrder = {
      items: [...cartItems],
      total: totalValue,
      time: new Date().toLocaleString(),
    };
    setOrderDetails(newOrder);

    setMessage("üí≥ Thanh to√°n th√†nh c√¥ng!");
    clearCart();
    setIsConfirmed(false);
  };

  return (
    <Card className="mb-4">
      <Card.Body>
        <Card.Title>üõí Gi·ªè h√†ng</Card.Title>
        
        {cartItems.length === 0 && !orderDetails && (
          <p>Gi·ªè h√†ng c·ªßa b·∫°n ƒëang tr·ªëng.</p>
        )}

        {cartItems.length > 0 && (
          <>
            <ListGroup variant="flush" className="mb-3">
              {cartItems.map((item) => (
                <CartItem key={item.id} item={item} />
              ))}
            </ListGroup>

            <div className="mb-3">
              <p><strong>T·ªïng s·ªë m√≥n:</strong> {cartItems.length}</p>
              <p><strong>T·ªïng gi√° tr·ªã:</strong> ${totalValue}</p>
            </div>

            <Button variant="secondary" onClick={clearCart} className="me-2">
              Clear Cart
            </Button>
            <Button variant="warning" onClick={handleConfirmOrder} className="me-2">
              X√°c nh·∫≠n ƒë∆°n h√†ng
            </Button>
            <Button variant="primary" onClick={handlePayment}>
              Thanh to√°n
            </Button>
          </>
        )}

        {/* Hi·ªÉn th·ªã th√¥ng tin ƒë∆°n h√†ng sau khi thanh to√°n */}
        {orderDetails && (
          <div className="mt-4">
            <h5>üì¶ Th√¥ng tin ƒë∆°n h√†ng</h5>
            <ListGroup className="mb-3">
              {orderDetails.items.map((item, index) => (
                <ListGroup.Item key={index}>
                  {item.name} - ${item.price}
                </ListGroup.Item>
              ))}
            </ListGroup>
            <p><strong>T·ªïng thanh to√°n:</strong> ${orderDetails.total}</p>
            <p><strong>Th·ªùi gian:</strong> {orderDetails.time}</p>
          </div>
        )}

        {message && <Alert variant="info" className="mt-3">{message}</Alert>}
      </Card.Body>

      {/* Modal x√°c nh·∫≠n */}
      <Modal show={showConfirm} onHide={handleConfirmNo}>
        <Modal.Header closeButton>
          <Modal.Title>X√°c nh·∫≠n ƒë∆°n h√†ng</Modal.Title>
        </Modal.Header>
        <Modal.Body>
          B·∫°n c√≥ ch·∫Øc ch·∫Øn mu·ªën x√°c nh·∫≠n ƒë∆°n h√†ng n√†y kh√¥ng?
        </Modal.Body>
        <Modal.Footer>
          <Button variant="secondary" onClick={handleConfirmNo}>
            H·ªßy
          </Button>
          <Button variant="success" onClick={handleConfirmYes}>
            X√°c nh·∫≠n
          </Button>
        </Modal.Footer>
      </Modal>
    </Card>
  );
};

export default Cart;
